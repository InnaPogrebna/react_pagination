{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","page","perPageUrl","onPageChange","getNextPage","getPrevPage","arrayPagesNumbers","useState","currentArrayNumbers","setCurrentArrayNumbers","useSearchParams","searchParamPage","setSearchParamPage","pageUrl","get","pagesNumbers","Math","ceil","i","push","useEffect","tempArrayPage","sliceArrayFirst","slice","concat","sliceArraySecond","sliceArrayMiddle","sliceArrayLast","length","toString","set","className","to","type","disabled","onClick","map","number","App","setPerPage","setPage","searchParam","setSearchParam","infoLastPage","infoFirstPage","path","element","pageNumber","prev","htmlFor","name","id","defaultValue","onChange","event","val","target","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b5e5e97.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport './Pagination.scss';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  page: number,\n  perPageUrl: string,\n  onPageChange: (page:number) => void,\n  getNextPage: () => void,\n  getPrevPage: () => void,\n};\n\nconst Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  page,\n  perPageUrl,\n  onPageChange,\n  getNextPage,\n  getPrevPage,\n}) => {\n  const arrayPagesNumbers: (number | string)[] = [];\n  const [currentArrayNumbers, setCurrentArrayNumbers]\n    = useState<(number | string)[]>([]);\n\n  const [searchParamPage, setSearchParamPage] = useSearchParams();\n  const pageUrl = searchParamPage.get('page') || '1';\n\n  const pagesNumbers = Math.ceil(total / perPage);\n\n  for (let i = 1; i <= pagesNumbers; i += 1) {\n    arrayPagesNumbers.push(i);\n  }\n\n  useEffect(() => {\n    let tempArrayPage:(number | string)[] = [...arrayPagesNumbers];\n    const sliceArrayFirst = arrayPagesNumbers.slice(0, 1).concat(['...']);\n    const sliceArraySecond = arrayPagesNumbers.slice(0, 3)\n      .concat(['...']);\n    const sliceArrayMiddle = arrayPagesNumbers.slice((page - 1),\n      (page + 1)).concat(['....']);\n    const sliceArrayLast = arrayPagesNumbers.slice(arrayPagesNumbers.length\n      - 3);\n\n    if (arrayPagesNumbers.length <= 5) {\n      tempArrayPage = arrayPagesNumbers;\n    } else if (page >= 1 && page <= 2) {\n      tempArrayPage = [...sliceArraySecond,\n        arrayPagesNumbers.length];\n    } else if (page === 3) {\n      tempArrayPage = [...sliceArraySecond, arrayPagesNumbers.length];\n    } else if (page > 3 && page < (arrayPagesNumbers.length - 1)) {\n      tempArrayPage = [...sliceArrayFirst,\n        ...sliceArrayMiddle, arrayPagesNumbers.length];\n    } else if (page > (arrayPagesNumbers.length - 2)) {\n      tempArrayPage = [...sliceArrayFirst, ...sliceArrayLast];\n    }\n\n    setCurrentArrayNumbers(tempArrayPage);\n    setSearchParamPage({\n      page: page.toString(),\n      perPage: perPage.toString(),\n    });\n  }, [page, perPage]);\n\n  searchParamPage.set('page', 'perPage');\n\n  return (\n    <div>\n      <ul className=\"pagination-list\">\n        <li>\n          <Link\n            to={`?page=${pageUrl}&perPage=${perPageUrl}`}\n          >\n            <button\n              type=\"button\"\n              className=\"pagination-list__pageItem pagination-list__item__list\"\n              disabled={(page === 1)}\n              onClick={getPrevPage}\n            >\n              Prev\n            </button>\n          </Link>\n        </li>\n        {currentArrayNumbers.map((number) => (\n          <li\n            className=\"pagination-list__item\"\n            key={number}\n          >\n            <Link\n              to={`?page=${page}&perPage=${perPageUrl}`}\n              className={`pagination-list__item__list ${(page === number) && 'pagination-list-active'\n              }`}\n              onClick={() => onPageChange(number as number)}\n            >\n              {number}\n            </Link>\n          </li>\n        ))}\n        <li>\n          <Link\n            to={`?page=${pageUrl}&perPage=${perPageUrl}`}\n          >\n            <button\n              type=\"button\"\n              className=\"pagination-list__pageItem pagination-list__item__list\"\n              disabled={(page >= pagesNumbers)}\n              onClick={getNextPage}\n            >\n              Next\n            </button>\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import {\n  Route, Routes, Link, useSearchParams,\n} from 'react-router-dom';\n\nimport React, { useState } from 'react';\nimport './App.scss';\nimport Pagination from './components/Pagination/Pagination';\n\n// const getSearchParam(search, param) {\n//   const searchParams = new URLSearchParams(search);\n//   return searchParams.get()\n// }\n\nconst App: React.FC = () => {\n  const [total] = useState(42);\n  const [perPage, setPerPage] = useState(5);\n  const [page, setPage] = useState(1);\n  const [searchParam, setSearchParam] = useSearchParams();\n\n  const infoLastPage = page * perPage;\n  const infoFirstPage = infoLastPage - perPage + 1;\n\n  const onPageChange = (pageNumber:number) => {\n    setPage(pageNumber);\n  };\n\n  const getPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const val = event.target.value;\n\n    setPerPage(+val);\n    setSearchParam({ perPage: val });\n    setPage(1);\n  };\n\n  const getPrevPage = () => {\n    setPage(prev => prev - 1);\n  };\n\n  const getNextPage = () => {\n    setPage(prev => prev + 1);\n  };\n\n  const perPageUrl = searchParam.get('perPage') || '5';\n\n  return (\n    <div className=\"app\">\n      <Link\n        to=\"/Pagination\"\n        className=\"h1\"\n      >\n        Pagination\n      </Link>\n      <div className=\"info\">\n        <p>\n          {infoFirstPage}\n          {' '}\n          -\n          {' '}\n          {(infoLastPage < total) ? infoLastPage : total}\n          {' '}\n          of\n          {' '}\n          {total}\n        </p>\n      </div>\n      <Routes>\n        <Route\n          path=\"/Pagination\"\n          element={(\n            <Pagination\n              onPageChange={onPageChange}\n              getNextPage={getNextPage}\n              getPrevPage={getPrevPage}\n              total={total}\n              perPage={perPage}\n              page={page}\n              perPageUrl={perPageUrl}\n            />\n          )}\n        />\n      </Routes>\n      <label htmlFor=\"perPage\">\n        Select:&nbsp;\n        <select\n          name=\"cars\"\n          id=\"perPage\"\n          defaultValue={perPage}\n          onChange={getPerPage}\n        >\n          <option value=\"3\">3</option>\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n        </select>\n      </label>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}